<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cxf="http://camel.apache.org/schema/cxf"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- Camel Contexts via XML configured -->
	<camel:camelContext id="camelContextXml"
		xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:v4.context.vss.objects.bgc"
		xmlns:urn1="urn:v1.customerconsultation.aia.services.bgc" xmlns:urn2="urn:v1.requestgetcustomermigrationstatus.aia.objects.bgc">
		<!-- <camel:route id="camelInOut"> <camel:from uri="aq:queue:AIA_SALESORDNTF2_JMSQ"
			/> <camel:to uri="log: 'Hello World : {$body}'" /> <camel:to uri="aq:queue:AIA_SALESORDNTF2_JMSQ"
			/> </camel:route> -->


		<camel:properties>
			<!-- <camel:property key="CamelLogDebugBodyStreams" value="false"/> -->
			<camel:property key="CamelLogDebugBodyMaxChars" value="999999" />
		</camel:properties>


		<camel:errorHandler id="noErrorHanlder" type="NoErrorHandler" />
		<camel:onException>
			<camel:exception>java.lang.RuntimeException</camel:exception>
			<camel:redeliveryPolicy maximumRedeliveries="2"
				redeliveryDelay="500" />
			<camel:handled>
				<camel:constant>true</camel:constant>
			</camel:handled>
			<camel:setHeader headerName="springBootCamelIntegrationStackTrace">
				<camel:simple>${exception.stacktrace}</camel:simple>
			</camel:setHeader>
			<camel:to uri="bean:defaultExceptionHandler?method=process" />
			<!-- <camel:to uri="ref:mcomOrderStatusInQ" /> -->
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'RuntimeException occurred',true)" />

			<camel:setHeader headerName="TransactionStatus">
				<camel:simple>ERROR</camel:simple>
			</camel:setHeader>
			<camel:to uri="bean:auditProcessor?method=process" />

		</camel:onException>

		<!-- Sonic to SHE "mcomEventDataOrderProgressInQ" -->
		<camel:route id="MCOMEventDataOrderProgress">
			<camel:from uri="ref:mcomEventDataOrderProgressInQ" />
			<camel:setProperty propertyName="JMSCorrelationID">
				<camel:simple>${header.JMSCorrelationID}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="MessageStartTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="EnvironmentName">
				<camel:simple>${properties:env.name}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="ConsumerId">
				<camel:simple>${properties:sonic.mcomEventDataOrderProgressInQ.q.consumerId}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="endUserId">
				<camel:simple>${properties:sonic.q.username}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="ActionName">
				<camel:simple>${properties:sonic.mcomEventDataOrderProgressInQ.q.actionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="SubActionName">
				<camel:simple>${properties:sonic.mcomEventDataOrderProgressInQ.q.subActionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="Component">
				<camel:simple>${properties:sonic.mcomEventDataOrderProgressInQ.q.component}</camel:simple>
			</camel:setProperty>

			<camel:to uri="bean:auditProcessor?method=processDetailed" />

			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Received Order Status Notification from MCOM at AIA',true)" />
			<camel:to uri="bean:logAudit?method=process" />
			<camel:to
				uri="xslt://AIAXslts/AIA_SALESORDNTF2-JMS/Transform_UpdateSalesOrderLineStatusListEBM_1.xsl?transformerFactoryClass=net.sf.saxon.TransformerFactoryImpl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transformed Order Status Notification from MCOM to AIA Format',true)" />
			<camel:to uri="bean:logAudit?method=process" />

			<camel:to
				uri="xslt://AIAXslts/AIA_SALESORDNTF2-JMS/Transform_McomTOSiebel_2.xsl?transformerFactoryClass=net.sf.saxon.TransformerFactoryImpl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transformed Order Status Notification from AIA to SIEBEL Format',true)" />
			<camel:to uri="bean:logAudit?method=process" />

			<camel:to uri="ref:sheEventDataOrderProgressAQ" />

			<camel:setProperty propertyName="MessageEndTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="TransactionStatus">
				<camel:simple>SUCCESS</camel:simple>
			</camel:setProperty>

			<camel:to uri="bean:auditProcessor?method=process" />
			<camel:to uri="bean:auditProcessor?method=processDetailed" />


		</camel:route>


		<camel:route id="MCOMBGCBOTSLoggingOrderStatus">
			<camel:from uri="ref:sheBGCBOTSLoggingOrderStatusInQ" />
			<camel:setProperty propertyName="JMSCorrelationID">
				<camel:simple>${header.JMSCorrelationID}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="MessageStartTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="EnvironmentName">
				<camel:simple>${properties:env.name}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="ConsumerId">
				<camel:simple>${properties:sonic.mcomBGCBOTSLoggingOrderStatusOutQ.q.consumerId}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="endUserId">
				<camel:simple>${properties:sonic.q.username}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="ActionName">
				<camel:simple>${properties:sonic.mcomBGCBOTSLoggingOrderStatusOutQ.q.actionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="SubActionName">
				<camel:simple>${properties:sonic.mcomBGCBOTSLoggingOrderStatusOutQ.q.subActionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="Component">
				<camel:simple>${properties:sonic.mcomBGCBOTSLoggingOrderStatusOutQ.q.component}</camel:simple>
			</camel:setProperty>

			<camel:to uri="bean:auditProcessor?method=processDetailed" />


			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Received ListOfBOTSLoggingIO Notification from SHE at AIA',true)" />
			<camel:to uri="bean:logAudit?method=process" />
			<camel:to
				uri="xslt://AIAXslts/AIA_ORDER_STATUS-JMS/Transform_SHE_to_EBM_1.xsl?transformerFactoryClass=net.sf.saxon.TransformerFactoryImpl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transformed ProcessSalesOrderEBM Notification from SHE to AIA Format',true)" />
			<camel:to uri="bean:logAudit?method=process" />

			<camel:to
				uri="xslt://AIAXslts/AIA_ORDER_STATUS-JMS/Transform_EBM_ABM_BOTS_2.xsl?transformerFactoryClass=net.sf.saxon.TransformerFactoryImpl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transformed EventDataOrderNotification Notification from AIA to MCOM Format',true)" />
			<camel:to uri="bean:logAudit?method=process" />

			<camel:to uri="ref:mcomBGCBOTSLoggingOrderStatusOutQ" />

			<camel:setProperty propertyName="MessageEndTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="TransactionStatus">
				<camel:simple>SUCCESS</camel:simple>
			</camel:setProperty>

			<camel:to uri="bean:auditProcessor?method=process" />
			<camel:to uri="bean:auditProcessor?method=processDetailed" />

		</camel:route>



		<!-- HTTP Service Routes below -->

		<camel:route id="soapHttpCustomerConsultationAIA"
			streamCache="true">
			<camel:from uri="cxf:bean:soapHttpCustomerConsultationAIA" />
			<camel:loadBalance>
				<camel:custom ref="roundRobinRef" />
				<camel:to uri="cxf:bean:soapHttpCustomerConsultationAIA1" />
				<camel:to uri="cxf:bean:soapHttpCustomerConsultationAIA2" />
			</camel:loadBalance>
		</camel:route>

		<camel:route id="soapHttpCustomerConsultationAIA1"
			streamCache="true">
			<camel:from uri="cxf:bean:soapHttpCustomerConsultationAIA1" />
			<camel:to uri="log:Request at soapHttpCustomerConsultationAIA1" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Received CustomerConsultation request at AIA',true)" />
			<camel:setProperty propertyName="MessageStartTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="EnvironmentName">
				<camel:simple>${properties:env.name}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="ActionName">
				<camel:simple>${properties:httpcustomerconsultation.actionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="SubActionName">
				<camel:simple>${properties:httpcustomerconsultation.subActionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="Component">
				<camel:simple>${properties:httpcustomerconsultation.component}</camel:simple>
			</camel:setProperty>
			<camel:to uri="bean:filterSoapBodyFromRequest?method=filterESBSoap" />
			<camel:to
				uri="xslt://AIAXslts/CustomerConsultation-Http/xform_GetCustomerMigrationStatusABM_to_QueryCustomerPartyEBM_1.xsl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform Request from ESB into AIA internal Request message.',true)" />
			<camel:to
				uri="xslt://AIAXslts/CustomerConsultation-Http/Transform_QueryCustomerPartyEBM_to_CustomerConsulatationSHEInput_2.xsl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform Request from AIA into SIEBEL Request message.',true)" />
			<camel:to
				uri="bean:filterSoapBodyFromRequest?method=padSHESoapRequestEnvelop" />
			<!-- <camel:to uri="log:${body}" /> -->
			<camel:setHeader headerName="SOAPAction">
				<camel:constant>"document/http://siebel.com/CustomUI:BGCCustomerConsultationgetCustomerMigrationStatus_2"</camel:constant>
			</camel:setHeader>
			<camel:setHeader headerName="operationName">
				<camel:constant>BGCCustomerConsultationgetCustomerMigrationStatus_2</camel:constant>
			</camel:setHeader>
			<camel:setHeader headerName="operationNamespace">
				<camel:constant>http://siebel.com/CustomUI</camel:constant>
			</camel:setHeader>
			<camel:to uri="cxf:bean:soapHttpSiebelEndpoint" />
			<!-- <camel:log message="SHE Response: ${body} >>>>>>>>>>" /> -->
			<camel:to
				uri="bean:filterSoapBodyFromRequest?method=filterSHESoapResponse" />
			<camel:choice>
				<camel:when>
					<camel:simple>${header.SOAPError} != 'FunctionalError' and ${header.SOAPError} != 'TechnicalError'</camel:simple>
					<camel:to
						uri="xslt://AIAXslts/CustomerConsultation-Http/Transform_CustomerConsultationOutput_to_QueryCustomerPartyEBM_3.xsl" />
					<!-- <camel:to uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform
						Response from SHE into AIA internal Response message.',true)" /> -->
					<camel:to
						uri="xslt://AIAXslts/CustomerConsultation-Http/xform_QueryCustomerPartyResponseEBM_to_GetCustomerMigrationStatusRespABM_4.xsl" />
					<!-- <camel:to uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform
						Response from AIA into ESB Response message.',true)" /> -->
				</camel:when>
			</camel:choice>

			<camel:setProperty propertyName="MessageEndTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:to uri="bean:filterSoapBodyFromRequest?method=padESBSoapEnvelop" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Response for CustomerConsultation request at AIA',true)" />
			<camel:multicast>
				<!-- <camel:convertBodyTo type="java.lang.String" /> -->
				<camel:to uri="bean:auditProcessor?method=process" />
			</camel:multicast>
		</camel:route>

		<camel:route id="soapHttpCustomerConsultationAIA2"
			streamCache="true">
			<camel:from uri="cxf:bean:soapHttpCustomerConsultationAIA2" />
			<camel:to uri="log:Request at soapHttpCustomerConsultationAIA2" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Received CustomerConsultation request at AIA',true)" />
			<camel:setProperty propertyName="MessageStartTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="EnvironmentName">
				<camel:simple>${properties:env.name}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="ActionName">
				<camel:simple>${properties:httpcustomerconsultation.actionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="SubActionName">
				<camel:simple>${properties:httpcustomerconsultation.subActionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="Component">
				<camel:simple>${properties:httpcustomerconsultation.component}</camel:simple>
			</camel:setProperty>
			<camel:to uri="bean:filterSoapBodyFromRequest?method=filterESBSoap" />
			<camel:to
				uri="xslt://AIAXslts/CustomerConsultation-Http/xform_GetCustomerMigrationStatusABM_to_QueryCustomerPartyEBM_1.xsl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform Request from ESB into AIA internal Request message.',true)" />
			<camel:to
				uri="xslt://AIAXslts/CustomerConsultation-Http/Transform_QueryCustomerPartyEBM_to_CustomerConsulatationSHEInput_2.xsl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform Request from AIA into SIEBEL Request message.',true)" />
			<camel:to
				uri="bean:filterSoapBodyFromRequest?method=padSHESoapRequestEnvelop" />
			<!-- <camel:to uri="log:${body}" /> -->
			<camel:setHeader headerName="SOAPAction">
				<camel:constant>"document/http://siebel.com/CustomUI:BGCCustomerConsultationgetCustomerMigrationStatus_2"</camel:constant>
			</camel:setHeader>
			<camel:setHeader headerName="operationName">
				<camel:constant>BGCCustomerConsultationgetCustomerMigrationStatus_2</camel:constant>
			</camel:setHeader>
			<camel:setHeader headerName="operationNamespace">
				<camel:constant>http://siebel.com/CustomUI</camel:constant>
			</camel:setHeader>
			<camel:to uri="cxf:bean:soapHttpSiebelEndpoint" />
			<!-- <camel:log message="SHE Response: ${body} >>>>>>>>>>" /> -->
			<camel:to
				uri="bean:filterSoapBodyFromRequest?method=filterSHESoapResponse" />
			<camel:choice>
				<camel:when>
					<camel:simple>${header.SOAPError} != 'FunctionalError' and ${header.SOAPError} != 'TechnicalError'</camel:simple>
					<camel:to
						uri="xslt://AIAXslts/CustomerConsultation-Http/Transform_CustomerConsultationOutput_to_QueryCustomerPartyEBM_3.xsl" />
					<!-- <camel:to uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform
						Response from SHE into AIA internal Response message.',true)" /> -->
					<camel:to
						uri="xslt://AIAXslts/CustomerConsultation-Http/xform_QueryCustomerPartyResponseEBM_to_GetCustomerMigrationStatusRespABM_4.xsl" />
					<!-- <camel:to uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform
						Response from AIA into ESB Response message.',true)" /> -->
				</camel:when>
			</camel:choice>

			<camel:setProperty propertyName="MessageEndTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:to uri="bean:filterSoapBodyFromRequest?method=padESBSoapEnvelop" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Response for CustomerConsultation request at AIA',true)" />
			<camel:multicast>
				<!-- <camel:convertBodyTo type="java.lang.String" /> -->
				<camel:to uri="bean:auditProcessor?method=process" />
			</camel:multicast>
		</camel:route>

		<camel:route id="soapHttpFinancialBackgroundCheckingAIA"
			streamCache="true">
			<camel:from uri="cxf:bean:soapHttpFinancialBackgroundCheckingAIA" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Received FinancialBackgroundChecking request at AIA',true)" />
			<camel:setProperty propertyName="MessageStartTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="EnvironmentName">
				<camel:simple>${properties:env.name}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="ActionName">
				<camel:simple>${properties:httpFinancialBackgroundChecking.actionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="SubActionName">
				<camel:simple>${properties:httpFinancialBackgroundChecking.subActionName}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="Component">
				<camel:simple>${properties:httpFinancialBackgroundChecking.component}</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="JMSCorrelationID">
				<camel:simple>123</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="ConsumerId">
				<camel:simple>AIA</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="endUserId">
				<camel:simple>id973498</camel:simple>
			</camel:setProperty>
			<camel:setProperty propertyName="TransactionStatus">
				<camel:simple>SUCCESS</camel:simple>
			</camel:setProperty>
			<camel:to uri="log: 'httpcustomerconsultation : {$body}'" />
			<camel:to
				uri="bean:filterSoapBodyFromRequest?method=filterSHESoapRequest" />
			<camel:to
				uri="xslt://AIAXslts/CheckCreditworthinessAIA-Http/CreditWorthinessReqABM_to_ReqEBM_1.xsl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform Request from SHE into AIA internal Request message.',true)" />
			<camel:to
				uri="xslt://AIAXslts/CheckCreditworthinessAIA-Http/ReqEBM_TO_CDBABM_NEW_2.xsl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform Request from AIA into ESB Request message.',true)" />
			<camel:to
				uri="bean:filterSoapBodyFromRequest?method=padBPSSoapRequestEnvelop" />
			<camel:setHeader headerName="Authorization">
				<camel:constant>{{httpFinancialBackgroundChecking.soapHttpBPS.Authentication}}</camel:constant>
			</camel:setHeader>
			<camel:to uri="cxf:bean:soapHttpBPSEndpoint" />
			<camel:to
				uri="bean:filterSoapBodyFromRequest?method=padAIASoapResponseEnvelop" />
			<camel:to
				uri="bean:filterSoapBodyFromRequest?method=filterSHESoapRequest" />
			<camel:to
				uri="xslt://AIAXslts/CheckCreditworthinessAIA-Http/XformRespCDBABM_to_RespEBM_NEW_3.xsl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform Response from BPS into AIA internal Response message.',true)" />
			<camel:to
				uri="xslt://AIAXslts/CheckCreditworthinessAIA-Http/ResponseEBM_to_resABM_4.xsl" />
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Transform Response from AIA into SHE Response message.',true)" />
			<camel:to uri="bean:xml2jsonConverter?method=convertRequestToJson" />
			<camel:to
				uri="bean:filterSoapBodyFromRequest?method=padAIASoapResponseEnvelop" />

			<camel:setProperty propertyName="MessageEndTime">
				<camel:simple>${date:now:yyyy-MM-dd'T'HH:mm:ss:SS'Z'}</camel:simple>
			</camel:setProperty>
			<camel:to
				uri="bean:endpointLogger?method=logEvent(*,*,*,'Response for CustomerConsultation request at AIA',true)" />
			<camel:multicast>
				<!-- <camel:convertBodyTo type="java.lang.String" /> -->
				<camel:to uri="bean:auditProcessor?method=process" />
			</camel:multicast>

		</camel:route>

	</camel:camelContext>

	<!-- below beans are used to connect to Oracle Queue -->


	<bean id="connectionFactoryOracleAQ" class="oracle.jms.AQjmsFactory"
		factory-method="getQueueConnectionFactory" primary="true">
		<constructor-arg index="0" value="${oracleaqjms.connection.url}" />
		<constructor-arg index="1" type="java.util.Properties"
			value="" />
	</bean>

	<!-- Transaction handling Camel context. -->

	<bean id="transactionRequired" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
		<property name="transactionManager" ref="txManager" />
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
	</bean>

	<bean id="txManager"
		class="org.springframework.jms.connection.JmsTransactionManager">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>


	<bean id="aqCredentials"
		class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
		<property name="targetConnectionFactory" ref="connectionFactoryOracleAQ" />
		<property name="username" value="${oracleaqjms.aq.username}" />
		<property name="password" value="${oracleaqjms.aq.password}" />
	</bean>

	<bean id="aq" class="org.apache.camel.component.jms.JmsComponent">
		<property name="connectionFactory" ref="aqCredentials" />
	</bean>

	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<!-- Use property below -->
		<property name="concurrentConsumers" value="1" />
	</bean>


	<!-- Gets a JMS Connection factory object from JDNI Server by jndiName -->
	<bean id="jmsConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiTemplate" ref="jndiTemplate" />
		<!-- Use property below -->
		<property name="jndiName" value="${sonic.conection-factory.name}" />
		<!-- the connection factory object is store under this name -->
	</bean>


	<bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate">
		<property name="environment">
			<props>
				<!-- Use property below -->
				<prop key="java.naming.factory.initial">${sonic.q.jndi.initialContext}</prop>
				<prop key="java.naming.provider.url">${sonic.q.connection.provider.url}</prop>
				<prop key="com.sonicsw.jndi.mfcontext.domain">${sonic.q.domain}</prop>
				<prop key="java.naming.security.principal">${sonic.q.username}</prop>
				<prop key="java.naming.security.credentials">${sonic.q.password}</prop>
			</props>
		</property>
	</bean>

	<bean id="auditProcessor"
		class="com.proximus.bootcamel.she.camelmiddleware.processes.AuditProcessor" />
	<!-- Define Sonic bean as a JMSComponent to be used by Camel Context, otherwise
		Camel Context does not know about how to connect to Sonic -->
	<bean id="sonic" class="org.apache.camel.component.jms.JmsComponent">
		<property name="configuration" ref="jmsConfig" />
	</bean>

	<!-- End point to retrieve the Order status notification from MCOM at AIA
		Side, configure the below as a property -->
	<camel:endpoint id="mcomEventDataOrderProgressInQ"
		uri="sonic:queue:${sonic.mcomEventDataOrderProgressInQ.q.name}?username=${sonic.q.username}&amp;password=${sonic.q.password}&amp;asyncConsumer=true" />

	<!-- End point to send the BGCBOTSLoggingOrderStatus notification from SHE
		at AIA Side -->
	<camel:endpoint id="mcomBGCBOTSLoggingOrderStatusOutQ"
		uri="sonic:queue:${sonic.mcomBGCBOTSLoggingOrderStatusOutQ.q.name}?username=${sonic.q.username}&amp;password=${sonic.q.password}&amp;asyncConsumer=true" />

	<!-- End point to send the EventDataOrderProgress notification from AIA
		at SHE Side -->
	<camel:endpoint id="sheEventDataOrderProgressAQ"
		uri="aq:queue:${oracle.sheEventDataOrderProgress.aq.name}?jmsMessageType=${oracle.sheEventDataOrderProgress.message.type}" />
	<!-- End point to retrieve the Order status notification from SHE at AIA
		Side -->
	<camel:endpoint id="sheBGCBOTSLoggingOrderStatusInQ"
		uri="aq:queue:${oracle.sheBGCBOTSLoggingOrderStatusInQ.aq.name}?jmsMessageType=${oracle.sheBGCBOTSLoggingOrderStatusInQ.message.type}" />
	<!-- Define Camel Routes Below -->


	<!-- autoStartup="true" -->

	<bean id="defaultErrorHandler" class="org.apache.camel.builder.DefaultErrorHandlerBuilder" />


	<bean id="roundRobinRef"
		class="org.apache.camel.processor.loadbalancer.RoundRobinLoadBalancer" />


	<cxf:cxfEndpoint id="soapHttpCustomerConsultationAIA"
		serviceClass="bgc.services.aia.customerconsultation.v1.CustomerConsultationPortType"
		wsdlURL="/wsdl/CustomerConsultationAIA/AIA-SVC-CustomerConsultation-1.0-standard-http_binding.wsdl"
		address="${httpcustomerconsultation.soapHttpCustomerConsultationAIA}">
		<cxf:properties>
			<entry key="dataFormat" value="MESSAGE" />
		</cxf:properties>
	</cxf:cxfEndpoint>

	<cxf:cxfEndpoint id="soapHttpCustomerConsultationAIA1"
		serviceClass="bgc.services.aia.customerconsultation.v1.CustomerConsultationPortType"
		wsdlURL="/wsdl/CustomerConsultationAIA/AIA-SVC-CustomerConsultation-1.0-standard-http_binding.wsdl"
		address="${httpcustomerconsultation.soapHttpCustomerConsultationAIA1}">
		<cxf:properties>
			<entry key="dataFormat" value="MESSAGE" />
		</cxf:properties>
	</cxf:cxfEndpoint>

	<cxf:cxfEndpoint id="soapHttpCustomerConsultationAIA2"
		serviceClass="bgc.services.aia.customerconsultation.v1.CustomerConsultationPortType"
		wsdlURL="/wsdl/CustomerConsultationAIA/AIA-SVC-CustomerConsultation-1.0-standard-http_binding.wsdl"
		address="${httpcustomerconsultation.soapHttpCustomerConsultationAIA2}">
		<cxf:properties>
			<entry key="dataFormat" value="MESSAGE" />
		</cxf:properties>
	</cxf:cxfEndpoint>


	<cxf:cxfEndpoint id="soapHttpFinancialBackgroundCheckingAIA"
		serviceClass="com.oracle.xmlns.getcustomercreditworthinessshereqabcsimpl.GetCustomerCreditWorthinessSHEReqABCSImpl"
		wsdlURL="/wsdl/CheckCreditworthinessAIA/AIA.wsdl"
		address="${httpFinancialBackgroundChecking.soapHttpFinancialBackgroundCheckingAIA}">
		<cxf:properties>
			<entry key="dataFormat" value="MESSAGE" />
		</cxf:properties>
	</cxf:cxfEndpoint>

	<cxf:cxfEndpoint id="soapHttpSiebelEndpoint"
		serviceClass="com.siebel.customui.BGCSpcMCHSpcCustomerSpcConsultation"
		wsdlURL="/wsdl/CustomerConsultationSHE/SHE.wsdl" address="${httpcustomerconsultation.soapHttpSiebelEndpoint}">
		<cxf:properties>
			<entry key="dataFormat" value="MESSAGE" />
		</cxf:properties>
	</cxf:cxfEndpoint>

	<cxf:cxfEndpoint id="soapHttpBPSEndpoint"
		serviceClass="bgc.services.bps.financialbackgroundchecking.v1.FinancialBackgroundCheckingPortType"
		wsdlURL="/wsdl/CheckCreditworthinessBPS/BPS-SVC-FinancialBackgroundChecking-1.0-standard-http_binding.wsdl"
		address="${httpFinancialBackgroundChecking.soapHttpBPSEndpoint}">
		<cxf:properties>
			<entry key="dataFormat" value="MESSAGE" />
		</cxf:properties>
	</cxf:cxfEndpoint>

</beans>
